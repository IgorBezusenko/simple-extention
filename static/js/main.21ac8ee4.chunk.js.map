{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","totalValue","setTotalValue","value","setValue","className","onClick","inc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAwCeA,G,MAtCH,WAAO,IAAD,EACoBC,mBAAS,GAD7B,mBACTC,EADS,KACGC,EADH,OAEUF,mBAAS,GAFnB,mBAETG,EAFS,KAEFC,EAFE,KAkBhB,OACE,sBAAKC,UAAW,MAAhB,UACE,kDAAqBJ,KACrB,kDAAqBE,KACrB,gCACE,wBACEG,QAAS,WAnBRJ,GAAc,SAACK,GAAD,OAASA,EAAM,KAG7BH,GAAS,SAACG,GAAD,OAASA,EAAM,MAe3B,uBAQA,wBAAQD,QArBI,WAChB,OAAOF,GAAS,SAACG,GAAD,OAASA,EAAM,MAoB3B,uBACA,wBAAQD,QAnBA,WACZJ,EAAc,GACdE,EAAS,IAiBL,2BCtBOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21ac8ee4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nconst App = () => {\n  const [totalValue, setTotalValue] = useState(0);\n  const [value, setValue] = useState(0);\n\n  const totalClicked = () => {\n    return setTotalValue((inc) => inc + 1);\n  };\n  const increment = () => {\n    return setValue((inc) => inc + 1);\n  };\n  const decrement = () => {\n    return setValue((inc) => inc - 1);\n  };\n  const reset = () => {\n    setTotalValue(0);\n    setValue(0);\n  };\n\n  return (\n    <div className={\"App\"}>\n      <div>Total clicked: {totalValue}</div>\n      <div>Current value: {value}</div>\n      <div>\n        <button\n          onClick={() => {\n            totalClicked();\n            increment();\n          }}\n        >\n          Increment\n        </button>\n        <button onClick={decrement}>Decrement</button>\n        <button onClick={reset}>Reset</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}